services:
  db:
    image: postgres:13
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=inventory
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devops-network

  backend:
    image: borjar3n/inventory-backend:latest
    container_name: devops-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/inventory
    depends_on:
      - db
    networks:
      - devops-network
    restart: unless-stopped

  frontend:
    image: borjar3n/inventory-frontend:latest
    container_name: devops-frontend
    environment:
      - VITE_API_URL=http://ec2-204-236-241-81.compute-1.amazonaws.com:8000
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - devops-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - devops-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - devops-network
    depends_on:
      - node-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - devops-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  devops-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: